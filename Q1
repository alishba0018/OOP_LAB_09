#include <iostream>
using namespace std;

class Vehicle {
public:
    string model;
    double rate;
    Vehicle(string m, double r) : model(m), rate(r) {}
    virtual double getDailyRate() const = 0;
    virtual void displayDetails() const = 0;
    virtual ~Vehicle() {}
};

class Car : public Vehicle {
public:
    Car(string m, double r) : Vehicle(m, r) {}
    double getDailyRate() const override {
        return rate;
    }
    void displayDetails() const override {
        cout << "Car Model: " << model << ", Daily Rate: $" << getDailyRate() << endl;
    }
};

class Bike : public Vehicle {
public:
    Bike(string m, double r) : Vehicle(m, r) {}
    double getDailyRate() const override {
        return rate;
    }
    void displayDetails() const override {
        cout << "Bike Model: " << model << ", Daily Rate: $" << getDailyRate() << endl;
    }
};

int main() {
    const int numVehicles = 2;
    Vehicle* vehicles[numVehicles];
    vehicles[0] = new Car("Honda Civic", 60.0);
    vehicles[1] = new Bike("Royal Enfield", 30.0);
    for (int i = 0; i < numVehicles; ++i) {
        vehicles[i]->displayDetails();
    }
    for (int i = 0; i < numVehicles; ++i) {
        delete vehicles[i];
    }
    return 0;
}
